initSidebarItems({"struct":[["TreeMap","This is implemented as an AA tree, which is a simplified variation of a red-black tree where red (horizontal) nodes can only be added as a right child. The time complexity is the same, and re-balancing operations are more frequent but also cheaper."],["TreeSet","An implementation of a set on top of the `TreeMap` container."],["TrieMap","A map implemented as a radix trie."],["TrieSet","A set implemented as a radix trie."]],"mod":[["blist",""],["compare","Comparators."],["enum_set","A structure for holding a set of enum variants."],["immut_slist",""],["interval_heap","A double-ended priority queue implemented with an interval heap."],["iter",""],["linked_hash_map","A HashMap wrapper that holds key-value pairs in insertion order."],["lru_cache","A cache that holds a limited number of key-value pairs. When the capacity of the cache is exceeded, the least-recently-used (where \"used\" means a look-up or putting the pair into the cache) pair is automatically removed."],["proto",""],["tree_map",""],["tree_set",""],["trie_map",""],["trie_set",""]]});